/*
 * Advanced features ZMK keymap example
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

/ {
    behaviors {
        hm: homerow_mods {
            compatible = "zmk,behavior-hold-tap";
            label = "HOMEROW_MODS";
            #binding-cells = <2>;
            tapping-term-ms = <200>;
            quick_tap_ms = <0>;
            flavor = "tap-preferred";
            bindings = <&kp>, <&kp>;
        };
        
        sk: sticky_key {
            compatible = "zmk,behavior-sticky-key";
            label = "STICKY_KEY";
            #binding-cells = <1>;
            bindings = <&kp>;
            release-after-ms = <1000>;
            quick-release;
        };
        
        td: tapdance {
            compatible = "zmk,behavior-tap-dance";
            label = "TAPDANCE";
            #binding-cells = <0>;
            tapping-term-ms = <200>;
            bindings = <&kp A>, <&kp B>, <&kp C>;
        };
        
        ks: key_sequence {
            compatible = "zmk,behavior-key-sequence";
            label = "KEY_SEQUENCE";
            #binding-cells = <0>;
            bindings = <&kp H &kp E &kp L &kp L &kp O>;
            wait-ms = <10>;
            tap-ms = <10>;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &kp ESC   &kp Q &kp W &kp E &kp R &kp T   &kp Y &kp U  &kp I     &kp O   &kp P    &kp BSPC
                &kp TAB   &hm LCTRL A &hm LALT S &hm LGUI D &hm LSHIFT F &kp G   &kp H &hm RSHIFT J  &hm RGUI K &hm RALT L &hm RCTRL SEMI &kp SQT
                &sk LSHFT &kp Z &kp X &kp C &kp V &kp B   &kp N &kp M  &kp COMMA &kp DOT &kp FSLH &sk RSHFT
                &kp LCTRL &kp LGUI &kp LALT &mo 1 &kp SPACE &kp SPACE &mo 2 &td &ks &kp RCTRL
            >;
        };
        
        lower_layer {
            bindings = <
                &kp GRAVE &kp N1 &kp N2 &kp N3 &kp N4 &kp N5   &kp N6 &kp N7 &kp N8 &kp N9 &kp N0 &kp DEL
                &trans    &trans &trans &trans &trans &trans   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
                &trans    &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                &trans    &trans &trans &trans &trans &trans   &trans &trans &trans &trans
            >;
        };
        
        raise_layer {
            bindings = <
                &kp F1    &kp F2 &kp F3 &kp F4 &kp F5 &kp F6   &kp F7 &kp F8 &kp F9 &kp F10 &kp F11 &kp F12
                &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &trans &trans &trans &trans &trans &trans
                &trans    &trans &trans &trans &trans &trans   &trans &trans &trans &trans &trans &trans
                &trans    &trans &trans &trans &trans &trans   &trans &trans &trans &trans
            >;
        };
    };
}; 