============================= test session starts ==============================
platform darwin -- Python 3.10.16, pytest-8.3.4, pluggy-1.5.0 -- /Users/malpern/.pyenv/versions/3.10.16/bin/python3.10
cachedir: .pytest_cache
rootdir: /Volumes/FlashGordon/Dropbox/code/nicktokatana
configfile: pyproject.toml
testpaths: tests
plugins: anyio-4.7.0
collecting ... collected 72 items / 57 deselected / 15 selected

tests/dts/test_performance.py::test_preprocessor_performance FAILED      [  6%]
tests/dts/test_preprocessor.py::test_preprocessor_initialization FAILED  [ 13%]
tests/dts/test_preprocessor.py::test_preprocess_simple_file PASSED       [ 20%]
tests/dts/test_preprocessor.py::test_preprocess_with_matrix PASSED       [ 26%]
tests/dts/test_preprocessor.py::test_preprocess_with_includes PASSED     [ 33%]
tests/dts/test_preprocessor.py::test_preprocess_invalid_file FAILED      [ 40%]
tests/dts/test_preprocessor.py::test_preprocess_invalid_cpp_command FAILED [ 46%]
tests/dts/test_preprocessor.py::test_matrix_size_extraction PASSED       [ 53%]
tests/dts/test_preprocessor.py::test_preprocess_simple_keymap FAILED     [ 60%]
tests/dts/test_preprocessor.py::test_preprocess_with_include_paths PASSED [ 66%]
tests/dts/test_preprocessor.py::test_matrix_size_detection PASSED        [ 73%]
tests/dts/test_preprocessor.py::test_matrix_size_detection_no_matrix PASSED [ 80%]
tests/test_dts_preprocessor.py::test_preprocessor FAILED                 [ 86%]
tests/test_dts_preprocessor.py::test_preprocessor_large_matrix FAILED    [ 93%]
tests/test_dts_preprocessor.py::test_preprocessor_error_handling FAILED  [100%]

=================================== FAILURES ===================================
________________________ test_preprocessor_performance _________________________

self = <converter.dts.preprocessor.DtsPreprocessor object at 0x1023153c0>
input_path = PosixPath('/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/complex_keymap.zmk')
matrix_size = None

    def preprocess(
        self,
        input_path: str,
        matrix_size: Optional[Tuple[int, int]] = None,
    ) -> str:
        """Preprocess a DTS file.
    
        Args:
            input_path: Path to the input file
            matrix_size: Optional tuple of (rows, cols) for matrix transform
    
        Returns:
            The preprocessed content as a string
    
        Raises:
            PreprocessorError: If preprocessing fails
        """
        input_path = Path(input_path)
        if not input_path.exists():
            raise PreprocessorError(
                f"Input file does not exist: {input_path}",
                help_text=(
                    "Ensure the input file exists and has proper " "read permissions"
                ),
            )
    
        try:
            with open(input_path, "r") as f:
                content_for_cpp = f.read()
        except Exception as e:
            raise PreprocessorError(
                f"Failed to read input file: {str(e)}",
                file=str(input_path),
                help_text=("Ensure the file exists and has proper " "read permissions"),
            )
    
        # Create a temporary file for the preprocessor input
        tmp_input = tempfile.NamedTemporaryFile(
            mode="w",
            delete=False,
            suffix=".dts",
            dir=None,  # Use system default temp dir (usually /tmp)
        )
        tmp_input.write(content_for_cpp)
        tmp_input.close()
        tmp_input_file = Path(tmp_input.name)
    
        # Debug: print environment and temp file contents
        print("[DtsPreprocessor] ENVIRONMENT:")
        for k, v in os.environ.items():
            if len(v) > 40:
                print(f"  {k}={v[:20]}...{v[-20:]}")
            else:
                print(f"  {k}={v}")
        if len(str(tmp_input_file)) > 70:
            print(f"[DtsPreprocessor] Temp file: " f"{str(tmp_input_file)[:70]}...")
        else:
            print(f"[DtsPreprocessor] Temp file: {tmp_input_file}")
        with open(tmp_input_file, "r") as f:
            print("[DtsPreprocessor] Temp file contents:")
            print(f.read())
    
        try:
            # Build preprocessor command as a list for shell=False
            if os.uname().sysname == "Darwin":
                # Use clang with assembler-with-cpp for .dts files on macOS
                clang_path = "/usr/bin/clang"
                cpp_cmd = [
                    clang_path,
                    "-E",
                    "-nostdinc",
                    "-undef",
                    "-x",
                    "assembler-with-cpp",
                ]
                for path in self.include_paths:
                    cpp_cmd.extend(["-I", str(path)])
                cpp_cmd.append(str(tmp_input_file))
            else:
                cpp_cmd = [
                    str(self.cpp_path),
                    "-E",
                ]
                for path in self.include_paths:
                    cpp_cmd.extend(["-I", str(path)])
                cpp_cmd.extend(["-x", "c", str(tmp_input_file)])
    
            # Debug: print the constructed command list
            print("[DtsPreprocessor] cpp command:", cpp_cmd)
    
            # Run preprocessor with shell=False
            try:
>               result = subprocess.run(
                    cpp_cmd,
                    capture_output=True,
                    text=True,
                    check=True,
                    shell=False,
                )

converter/dts/preprocessor.py:214: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

input = None, capture_output = True, timeout = None, check = True
popenargs = (['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', ...],)
kwargs = {'shell': False, 'stderr': -1, 'stdout': -1, 'text': True}
process = <Popen: returncode: 1 args: ['/usr/bin/clang', '-E', '-nostdinc', '-undef', ...>
stdout = '# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp556vgt5b.dts"\n# 1 "<built-in>" 1\n# 1 "<built-in>" 3\n\n\n\...yers";\n\n        tri_layer {\n            if-layers = <1 2>;\n            then-layer = <3>;\n        };\n    };\n};\n'
stderr = "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp556vgt5b.dts:1:10: fatal error: 'dt-bindings/zmk/matrix_transform...lude <dt-bindings/zmk/matrix_transform.h>\n      |          ^~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~\n1 error generated.\n"
retcode = 1

    def run(*popenargs,
            input=None, capture_output=False, timeout=None, check=False, **kwargs):
        """Run command with arguments and return a CompletedProcess instance.
    
        The returned instance will have attributes args, returncode, stdout and
        stderr. By default, stdout and stderr are not captured, and those attributes
        will be None. Pass stdout=PIPE and/or stderr=PIPE in order to capture them,
        or pass capture_output=True to capture both.
    
        If check is True and the exit code was non-zero, it raises a
        CalledProcessError. The CalledProcessError object will have the return code
        in the returncode attribute, and output & stderr attributes if those streams
        were captured.
    
        If timeout is given, and the process takes too long, a TimeoutExpired
        exception will be raised.
    
        There is an optional argument "input", allowing you to
        pass bytes or a string to the subprocess's stdin.  If you use this argument
        you may not also use the Popen constructor's "stdin" argument, as
        it will be used internally.
    
        By default, all communication is in bytes, and therefore any "input" should
        be bytes, and the stdout and stderr will be bytes. If in text mode, any
        "input" should be a string, and stdout and stderr will be strings decoded
        according to locale encoding, or by "encoding" if set. Text mode is
        triggered by setting any of text, encoding, errors or universal_newlines.
    
        The other arguments are the same as for the Popen constructor.
        """
        if input is not None:
            if kwargs.get('stdin') is not None:
                raise ValueError('stdin and input arguments may not both be used.')
            kwargs['stdin'] = PIPE
    
        if capture_output:
            if kwargs.get('stdout') is not None or kwargs.get('stderr') is not None:
                raise ValueError('stdout and stderr arguments may not be used '
                                 'with capture_output.')
            kwargs['stdout'] = PIPE
            kwargs['stderr'] = PIPE
    
        with Popen(*popenargs, **kwargs) as process:
            try:
                stdout, stderr = process.communicate(input, timeout=timeout)
            except TimeoutExpired as exc:
                process.kill()
                if _mswindows:
                    # Windows accumulates the output in a single blocking
                    # read() call run on child threads, with the timeout
                    # being done in a join() on those threads.  communicate()
                    # _after_ kill() is required to collect that and add it
                    # to the exception.
                    exc.stdout, exc.stderr = process.communicate()
                else:
                    # POSIX _communicate already populated the output so
                    # far into the TimeoutExpired exception.
                    process.wait()
                raise
            except:  # Including KeyboardInterrupt, communicate handled that.
                process.kill()
                # We don't call process.wait() as .__exit__ does that for us.
                raise
            retcode = process.poll()
            if check and retcode:
>               raise CalledProcessError(retcode, process.args,
                                         output=stdout, stderr=stderr)
E               subprocess.CalledProcessError: Command '['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp556vgt5b.dts']' returned non-zero exit status 1.

/Users/malpern/.pyenv/versions/3.10.16/lib/python3.10/subprocess.py:526: CalledProcessError

During handling of the above exception, another exception occurred:

sample_keymap_path = '/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/complex_keymap.zmk'

    def test_preprocessor_performance(sample_keymap_path):
        """Test the performance of the preprocessor."""
        preprocessor = DtsPreprocessor()
    
        # Run multiple times to get stable measurements
        times = []
        for _ in range(10):
>           _, duration = measure_time(preprocessor.preprocess, sample_keymap_path)

tests/dts/test_performance.py:34: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 
tests/dts/test_performance.py:16: in measure_time
    result = func(*args, **kwargs)
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <converter.dts.preprocessor.DtsPreprocessor object at 0x1023153c0>
input_path = PosixPath('/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/complex_keymap.zmk')
matrix_size = None

    def preprocess(
        self,
        input_path: str,
        matrix_size: Optional[Tuple[int, int]] = None,
    ) -> str:
        """Preprocess a DTS file.
    
        Args:
            input_path: Path to the input file
            matrix_size: Optional tuple of (rows, cols) for matrix transform
    
        Returns:
            The preprocessed content as a string
    
        Raises:
            PreprocessorError: If preprocessing fails
        """
        input_path = Path(input_path)
        if not input_path.exists():
            raise PreprocessorError(
                f"Input file does not exist: {input_path}",
                help_text=(
                    "Ensure the input file exists and has proper " "read permissions"
                ),
            )
    
        try:
            with open(input_path, "r") as f:
                content_for_cpp = f.read()
        except Exception as e:
            raise PreprocessorError(
                f"Failed to read input file: {str(e)}",
                file=str(input_path),
                help_text=("Ensure the file exists and has proper " "read permissions"),
            )
    
        # Create a temporary file for the preprocessor input
        tmp_input = tempfile.NamedTemporaryFile(
            mode="w",
            delete=False,
            suffix=".dts",
            dir=None,  # Use system default temp dir (usually /tmp)
        )
        tmp_input.write(content_for_cpp)
        tmp_input.close()
        tmp_input_file = Path(tmp_input.name)
    
        # Debug: print environment and temp file contents
        print("[DtsPreprocessor] ENVIRONMENT:")
        for k, v in os.environ.items():
            if len(v) > 40:
                print(f"  {k}={v[:20]}...{v[-20:]}")
            else:
                print(f"  {k}={v}")
        if len(str(tmp_input_file)) > 70:
            print(f"[DtsPreprocessor] Temp file: " f"{str(tmp_input_file)[:70]}...")
        else:
            print(f"[DtsPreprocessor] Temp file: {tmp_input_file}")
        with open(tmp_input_file, "r") as f:
            print("[DtsPreprocessor] Temp file contents:")
            print(f.read())
    
        try:
            # Build preprocessor command as a list for shell=False
            if os.uname().sysname == "Darwin":
                # Use clang with assembler-with-cpp for .dts files on macOS
                clang_path = "/usr/bin/clang"
                cpp_cmd = [
                    clang_path,
                    "-E",
                    "-nostdinc",
                    "-undef",
                    "-x",
                    "assembler-with-cpp",
                ]
                for path in self.include_paths:
                    cpp_cmd.extend(["-I", str(path)])
                cpp_cmd.append(str(tmp_input_file))
            else:
                cpp_cmd = [
                    str(self.cpp_path),
                    "-E",
                ]
                for path in self.include_paths:
                    cpp_cmd.extend(["-I", str(path)])
                cpp_cmd.extend(["-x", "c", str(tmp_input_file)])
    
            # Debug: print the constructed command list
            print("[DtsPreprocessor] cpp command:", cpp_cmd)
    
            # Run preprocessor with shell=False
            try:
                result = subprocess.run(
                    cpp_cmd,
                    capture_output=True,
                    text=True,
                    check=True,
                    shell=False,
                )
            except subprocess.CalledProcessError as e:
>               raise PreprocessorError(
                    "Failed to process DTS directives",
                    file=str(input_path),
                    context=str(e),
                    help_text=("Check for malformed DTS directives in " "input file"),
                )
E               converter.dts.preprocessor.PreprocessorError: Failed to process DTS directives

converter/dts/preprocessor.py:222: PreprocessorError
----------------------------- Captured stdout call -----------------------------
[DtsPreprocessor] ENVIRONMENT:
  MallocNanoZone=0
  USER=malpern
  SECURITYSESSIONID=186a3
  COMMAND_MODE=unix2003
  __CFBundleIdentifier=com.todesktop.230313mzl4w4u92
  PATH=/Users/malpern/.curs....cache/lm-studio/bin
  LOGNAME=malpern
  SSH_AUTH_SOCK=/private/tmp/com.app...x1qskoux7b/Listeners
  HOME=/Users/malpern
  SHELL=/bin/zsh
  TMPDIR=/var/folders/0s/42v7...1cdnx0vrvyr0000gn/T/
  LaunchInstanceID=BFD4BF06-15BD-4F76-8D8A-1AEC50E6795A
  __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0
  XPC_SERVICE_NAME=0
  XPC_FLAGS=0x0
  ORIGINAL_XDG_CURRENT_DESKTOP=undefined
  CURSOR_TRACE_ID=f5e099fd466543c5a0d391e03a641e89
  SHLVL=1
  PWD=/Volumes/FlashGordon...ox/code/nicktokatana
  OLDPWD=/Volumes/FlashGordon...ox/code/nicktokatana
  HOMEBREW_PREFIX=/opt/homebrew
  HOMEBREW_CELLAR=/opt/homebrew/Cellar
  HOMEBREW_REPOSITORY=/opt/homebrew
  INFOPATH=/opt/homebrew/share/...homebrew/share/info:
  YOUR_CONSUMER_KEY=ah6HAffNJRCv4xNrV4OZcVIrQ
  YOUR_CONSUMER_SECRET=EXM9IzH9IEdE2yJf0t5F...DPuFXLk55DwB8pLRswR5
  YOUR_ACCESS_TOKEN=1483-5UbadNrxZUkJpAp...JSXPVSxtsPwJyrUrZvcO
  YOUR_ACCESS_TOKEN_SECRET=jeyyEWPHAgoS0ebKus4t...0jH2T3gRCIz3dsYXQwqS
  YOUR_BEARER_TOKEN=AAAAAAAAAAAAAAAAAAAA...8YVAWCOQu6Pyu4yhuY0a
  OPENAI_API_KEY=sk-qVQDNdwpfPhrAvFr9...ob362AQbhWVa3p95yD28
  ANTHROPIC_API_KEY=sk-ant-api03-Tq7nYRm...SCuUoAfwIQg-NWFWuAAA
  TAVILY_API_KEY=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
  BING_SUBSCRIPTION_KEY=bec8ded0f34a421ba60cc3bd4626825e
  EDITOR=vi
  ZSH=/Users/malpern/.oh-my-zsh
  PAGER=head -n 10000 | cat
  LESS=-R
  LSCOLORS=Gxfxcxdxbxegedabagacad
  LS_COLORS=di=1;36:ln=35:so=32:...46:tw=30;42:ow=30;43
  PYENV_ROOT=/Users/malpern/.pyenv
  PYENV_SHELL=zsh
  DISABLE_AUTO_UPDATE=true
  TERM_PROGRAM=vscode
  TERM_PROGRAM_VERSION=0.50.1
  LANG=en_US.UTF-8
  COLORTERM=truecolor
  GIT_ASKPASS=/Applications/Cursor.../git/dist/askpass.sh
  VSCODE_GIT_ASKPASS_NODE=/Applications/Cursor...rsor Helper (Plugin)
  VSCODE_GIT_ASKPASS_EXTRA_ARGS=
  VSCODE_GIT_ASKPASS_MAIN=/Applications/Cursor...dist/askpass-main.js
  VSCODE_GIT_IPC_HANDLE=/var/folders/0s/42v7...-git-14a5ce3e7f.sock
  PYENV_VERSION=3.10.16
  PYENV_DIR=/
  VIRTUAL_ENV=/Volumes/Flash Gordo...e/nicktokatana/.venv
  PYENV_HOOK_PATH=/Users/malpern/.pyen.../usr/lib/pyenv/hooks
  VIRTUAL_ENV_PROMPT=.venv
  VSCODE_INJECTION=1
  ZDOTDIR=/Users/malpern
  USER_ZDOTDIR=/Users/malpern
  TERM=xterm-256color
  PS1=.venv%(?:%{[01;32m%...} $(git_prompt_info)
  PYTHONPATH=.
  _=/Users/malpern/.pyen...s/3.10.16/bin/pytest
  PYTEST_VERSION=8.3.4
  PYTEST_CURRENT_TEST=tests/dts/test_perfo...r_performance (call)
[DtsPreprocessor] Temp file: /var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp556vgt5b.dts
[DtsPreprocessor] Temp file contents:
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <12>;
        map = <
            RC(0,0)  RC(0,1)  RC(0,2)  RC(0,3)  RC(0,4)  RC(0,5)  RC(0,6)  RC(0,7)  RC(0,8)  RC(0,9)  RC(0,10) RC(0,11)
            RC(1,0)  RC(1,1)  RC(1,2)  RC(1,3)  RC(1,4)  RC(1,5)  RC(1,6)  RC(1,7)  RC(1,8)  RC(1,9)  RC(1,10) RC(1,11)
            RC(2,0)  RC(2,1)  RC(2,2)  RC(2,3)  RC(2,4)  RC(2,5)  RC(2,6)  RC(2,7)  RC(2,8)  RC(2,9)  RC(2,10) RC(2,11)
            RC(3,0)  RC(3,1)  RC(3,2)  RC(3,3)  RC(3,4)  RC(3,5)  RC(3,6)  RC(3,7)  RC(3,8)  RC(3,9)  RC(3,10) RC(3,11)
        >;
    };

    behaviors {
        mt: mod_tap {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
        };
        
        lt: layer_tap {
            compatible = "zmk,behavior-hold-tap";
            tapping-term-ms = <200>;
            #binding-cells = <2>;
        };
        
        macro_a: macro_a {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp A &kp B>;
        };
        
        macro_b: macro_b {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp C &kp D>;
        };
        
        unicode: unicode {
            compatible = "zmk,behavior-unicode";
            #binding-cells = <1>;
        };
        
        uc_string: unicode_string {
            compatible = "zmk,behavior-unicode-string";
            #binding-cells = <1>;
            strings = <
                "smile" "😊"
                "heart" "❤️"
            >;
        };
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &mt LSHIFT A  &kp B        &macro_a     &kp D         &lt 1 E      &kp F
                &kp G         &kp H        &kp I        &kp J         &kp K        &kp L
                &kp M         &kp N        &kp O        &kp P         &kp Q        &kp R
                &kp S         &kp T        &kp U        &kp V         &kp W        &kp X
            >;
        };
        
        lower_layer {
            bindings = <
                &kp N1        &kp N2       &kp N3       &kp N4        &kp N5       &kp N6
                &kp N7        &kp N8       &kp N9       &kp N0        &kp MINUS    &kp EQUAL
                &kp F1        &kp F2       &kp F3       &kp F4        &kp F5       &kp F6
                &kp F7        &kp F8       &kp F9       &kp F10       &kp F11      &kp F12
            >;
        };
        
        raise_layer {
            bindings = <
                &kp EXCLAMATION &kp AT     &kp HASH     &kp DOLLAR    &kp PERCENT  &kp CARET
                &kp AMPERSAND   &kp STAR   &kp LPAR     &kp RPAR      &kp UNDER    &kp PLUS
                &kp F1          &kp F2     &kp F3       &kp F4        &kp F5       &kp F6
                &kp F7          &kp F8     &kp F9       &kp F10       &kp F11      &kp F12
            >;
        };
        
        adjust_layer {
            bindings = <
                &kp RESET      &kp BOOTLOADER &kp NONE  &kp NONE      &kp NONE     &kp NONE
                &kp NONE       &kp NONE       &kp NONE  &kp NONE      &kp NONE     &kp NONE
                &kp NONE       &kp NONE       &kp NONE  &kp NONE      &kp NONE     &kp NONE
                &kp NONE       &kp NONE       &kp NONE  &kp NONE      &kp NONE     &kp NONE
            >;
        };
    };

    combos {
        compatible = "zmk,combos";
        
        combo_esc {
            timeout-ms = <50>;
            key-positions = <0 1>;
            bindings = <&kp ESC>;
        };
        
        combo_tab {
            timeout-ms = <50>;
            key-positions = <1 2>;
            bindings = <&kp TAB>;
        };
        
        combo_enter {
            timeout-ms = <50>;
            key-positions = <2 3>;
            bindings = <&kp ENTER>;
        };
    };

    conditional_layers {
        compatible = "zmk,conditional-layers";
        
        tri_layer {
            if-layers = <1 2>;
            then-layer = <3>;
        };
    };
}; 
[DtsPreprocessor] cpp command: ['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp556vgt5b.dts']
_______________________ test_preprocessor_initialization _______________________

    def test_preprocessor_initialization():
        """Test preprocessor initialization with different options."""
        # Test default initialization
        preprocessor = DtsPreprocessor()
>       assert preprocessor.cpp_path.endswith("cpp") or preprocessor.cpp_path.endswith(
            "clang"
        )
E       AttributeError: 'PosixPath' object has no attribute 'endswith'

tests/dts/test_preprocessor.py:92: AttributeError
_________________________ test_preprocess_invalid_file _________________________

    def test_preprocess_invalid_file():
        """Test preprocessing a non-existent file."""
        preprocessor = DtsPreprocessor()
        with pytest.raises(FileNotFoundError):
>           preprocessor.preprocess("nonexistent.dts")

tests/dts/test_preprocessor.py:201: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <converter.dts.preprocessor.DtsPreprocessor object at 0x1024d7c70>
input_path = PosixPath('nonexistent.dts'), matrix_size = None

    def preprocess(
        self,
        input_path: str,
        matrix_size: Optional[Tuple[int, int]] = None,
    ) -> str:
        """Preprocess a DTS file.
    
        Args:
            input_path: Path to the input file
            matrix_size: Optional tuple of (rows, cols) for matrix transform
    
        Returns:
            The preprocessed content as a string
    
        Raises:
            PreprocessorError: If preprocessing fails
        """
        input_path = Path(input_path)
        if not input_path.exists():
>           raise PreprocessorError(
                f"Input file does not exist: {input_path}",
                help_text=(
                    "Ensure the input file exists and has proper " "read permissions"
                ),
            )
E           converter.dts.preprocessor.PreprocessorError: Input file does not exist: nonexistent.dts

converter/dts/preprocessor.py:141: PreprocessorError
_____________________ test_preprocess_invalid_cpp_command ______________________

temp_dir = '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpvxxysg3g'

    def test_preprocess_invalid_cpp_command(temp_dir):
        """Test preprocessing with invalid cpp command."""
        # Create a simple DTS file
        input_path = os.path.join(temp_dir, "test.dts")
        with open(input_path, "w") as f:
            f.write("/ { test = <1>; };")
    
        # Use invalid cpp path
        preprocessor = DtsPreprocessor(cpp_path="invalid_cpp")
>       with pytest.raises(PreprocessorError):
E       Failed: DID NOT RAISE <class 'converter.dts.preprocessor.PreprocessorError'>

tests/dts/test_preprocessor.py:213: Failed
----------------------------- Captured stdout call -----------------------------
[DtsPreprocessor] ENVIRONMENT:
  MallocNanoZone=0
  USER=malpern
  SECURITYSESSIONID=186a3
  COMMAND_MODE=unix2003
  __CFBundleIdentifier=com.todesktop.230313mzl4w4u92
  PATH=/Users/malpern/.curs....cache/lm-studio/bin
  LOGNAME=malpern
  SSH_AUTH_SOCK=/private/tmp/com.app...x1qskoux7b/Listeners
  HOME=/Users/malpern
  SHELL=/bin/zsh
  TMPDIR=/var/folders/0s/42v7...1cdnx0vrvyr0000gn/T/
  LaunchInstanceID=BFD4BF06-15BD-4F76-8D8A-1AEC50E6795A
  __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0
  XPC_SERVICE_NAME=0
  XPC_FLAGS=0x0
  ORIGINAL_XDG_CURRENT_DESKTOP=undefined
  CURSOR_TRACE_ID=f5e099fd466543c5a0d391e03a641e89
  SHLVL=1
  PWD=/Volumes/FlashGordon...ox/code/nicktokatana
  OLDPWD=/Volumes/FlashGordon...ox/code/nicktokatana
  HOMEBREW_PREFIX=/opt/homebrew
  HOMEBREW_CELLAR=/opt/homebrew/Cellar
  HOMEBREW_REPOSITORY=/opt/homebrew
  INFOPATH=/opt/homebrew/share/...homebrew/share/info:
  YOUR_CONSUMER_KEY=ah6HAffNJRCv4xNrV4OZcVIrQ
  YOUR_CONSUMER_SECRET=EXM9IzH9IEdE2yJf0t5F...DPuFXLk55DwB8pLRswR5
  YOUR_ACCESS_TOKEN=1483-5UbadNrxZUkJpAp...JSXPVSxtsPwJyrUrZvcO
  YOUR_ACCESS_TOKEN_SECRET=jeyyEWPHAgoS0ebKus4t...0jH2T3gRCIz3dsYXQwqS
  YOUR_BEARER_TOKEN=AAAAAAAAAAAAAAAAAAAA...8YVAWCOQu6Pyu4yhuY0a
  OPENAI_API_KEY=sk-qVQDNdwpfPhrAvFr9...ob362AQbhWVa3p95yD28
  ANTHROPIC_API_KEY=sk-ant-api03-Tq7nYRm...SCuUoAfwIQg-NWFWuAAA
  TAVILY_API_KEY=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
  BING_SUBSCRIPTION_KEY=bec8ded0f34a421ba60cc3bd4626825e
  EDITOR=vi
  ZSH=/Users/malpern/.oh-my-zsh
  PAGER=head -n 10000 | cat
  LESS=-R
  LSCOLORS=Gxfxcxdxbxegedabagacad
  LS_COLORS=di=1;36:ln=35:so=32:...46:tw=30;42:ow=30;43
  PYENV_ROOT=/Users/malpern/.pyenv
  PYENV_SHELL=zsh
  DISABLE_AUTO_UPDATE=true
  TERM_PROGRAM=vscode
  TERM_PROGRAM_VERSION=0.50.1
  LANG=en_US.UTF-8
  COLORTERM=truecolor
  GIT_ASKPASS=/Applications/Cursor.../git/dist/askpass.sh
  VSCODE_GIT_ASKPASS_NODE=/Applications/Cursor...rsor Helper (Plugin)
  VSCODE_GIT_ASKPASS_EXTRA_ARGS=
  VSCODE_GIT_ASKPASS_MAIN=/Applications/Cursor...dist/askpass-main.js
  VSCODE_GIT_IPC_HANDLE=/var/folders/0s/42v7...-git-14a5ce3e7f.sock
  PYENV_VERSION=3.10.16
  PYENV_DIR=/
  VIRTUAL_ENV=/Volumes/Flash Gordo...e/nicktokatana/.venv
  PYENV_HOOK_PATH=/Users/malpern/.pyen.../usr/lib/pyenv/hooks
  VIRTUAL_ENV_PROMPT=.venv
  VSCODE_INJECTION=1
  ZDOTDIR=/Users/malpern
  USER_ZDOTDIR=/Users/malpern
  TERM=xterm-256color
  PS1=.venv%(?:%{[01;32m%...} $(git_prompt_info)
  PYTHONPATH=.
  _=/Users/malpern/.pyen...s/3.10.16/bin/pytest
  PYTEST_VERSION=8.3.4
  PYTEST_CURRENT_TEST=tests/dts/test_prepr...d_cpp_command (call)
[DtsPreprocessor] Temp file: /var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp5t2wcp5t.dts
[DtsPreprocessor] Temp file contents:
/ { test = <1>; };
[DtsPreprocessor] cpp command: ['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp5t2wcp5t.dts']
________________________ test_preprocess_simple_keymap _________________________

preprocessor = <converter.dts.preprocessor.DtsPreprocessor object at 0x10230a110>
simple_keymap_path = PosixPath('/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/simple_keymap.zmk')

    def test_preprocess_simple_keymap(preprocessor, simple_keymap_path):
        """Test preprocessing a simple keymap."""
        result = preprocessor.preprocess(str(simple_keymap_path))
    
        # Check that the result contains the expected content
>       assert "RC(0,0)" in result
E       assert 'RC(0,0)' in '# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpjxonai70.dts"\n# 1 "<built-in>" 1\n# 1 "<built-in>" 3\n\n\n\n\n\n\n# 1 "<command line>" 1\n# 1 "<built-in>" 2\n# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpjxonai70.dts" 2\n# 1 "/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include/dt-bindings/zmk/keys.h" 1\n# 2 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpjxonai70.dts" 2\n# 1 "/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include/dt-bindings/zmk/matrix_transform.h" 1\n# 3 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpjxonai70.dts" 2\n\n/ {\n    chosen {\n        zmk,matrix_transform = &default_transform;\n    };\n\n    default_transform: matrix_transform {\n        compatible = "zmk,matrix-transform";\n        rows = <2>;\n        columns = <3>;\n        map = <\n            ((0) << 8 | (0)) ((0) << 8 | (1)) ((0) << 8 | (2))\n            ((1) << 8 | (0)) ((1) << 8 | (1)) ((1) << 8 | (2))\n        >;\n    };\n\n    keymap {\n        compatible = "zmk,keymap";\n\n        default_layer {\n            bindings = <\n                &kp 0x04 &kp 0x05 &kp 0x06\n                &kp 0x07 &kp 0x08 &kp 0x09\n            >;\n        };\n    };\n};\n'

tests/dts/test_preprocessor.py:248: AssertionError
----------------------------- Captured stdout call -----------------------------
[DtsPreprocessor] ENVIRONMENT:
  MallocNanoZone=0
  USER=malpern
  SECURITYSESSIONID=186a3
  COMMAND_MODE=unix2003
  __CFBundleIdentifier=com.todesktop.230313mzl4w4u92
  PATH=/Users/malpern/.curs....cache/lm-studio/bin
  LOGNAME=malpern
  SSH_AUTH_SOCK=/private/tmp/com.app...x1qskoux7b/Listeners
  HOME=/Users/malpern
  SHELL=/bin/zsh
  TMPDIR=/var/folders/0s/42v7...1cdnx0vrvyr0000gn/T/
  LaunchInstanceID=BFD4BF06-15BD-4F76-8D8A-1AEC50E6795A
  __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0
  XPC_SERVICE_NAME=0
  XPC_FLAGS=0x0
  ORIGINAL_XDG_CURRENT_DESKTOP=undefined
  CURSOR_TRACE_ID=f5e099fd466543c5a0d391e03a641e89
  SHLVL=1
  PWD=/Volumes/FlashGordon...ox/code/nicktokatana
  OLDPWD=/Volumes/FlashGordon...ox/code/nicktokatana
  HOMEBREW_PREFIX=/opt/homebrew
  HOMEBREW_CELLAR=/opt/homebrew/Cellar
  HOMEBREW_REPOSITORY=/opt/homebrew
  INFOPATH=/opt/homebrew/share/...homebrew/share/info:
  YOUR_CONSUMER_KEY=ah6HAffNJRCv4xNrV4OZcVIrQ
  YOUR_CONSUMER_SECRET=EXM9IzH9IEdE2yJf0t5F...DPuFXLk55DwB8pLRswR5
  YOUR_ACCESS_TOKEN=1483-5UbadNrxZUkJpAp...JSXPVSxtsPwJyrUrZvcO
  YOUR_ACCESS_TOKEN_SECRET=jeyyEWPHAgoS0ebKus4t...0jH2T3gRCIz3dsYXQwqS
  YOUR_BEARER_TOKEN=AAAAAAAAAAAAAAAAAAAA...8YVAWCOQu6Pyu4yhuY0a
  OPENAI_API_KEY=sk-qVQDNdwpfPhrAvFr9...ob362AQbhWVa3p95yD28
  ANTHROPIC_API_KEY=sk-ant-api03-Tq7nYRm...SCuUoAfwIQg-NWFWuAAA
  TAVILY_API_KEY=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
  BING_SUBSCRIPTION_KEY=bec8ded0f34a421ba60cc3bd4626825e
  EDITOR=vi
  ZSH=/Users/malpern/.oh-my-zsh
  PAGER=head -n 10000 | cat
  LESS=-R
  LSCOLORS=Gxfxcxdxbxegedabagacad
  LS_COLORS=di=1;36:ln=35:so=32:...46:tw=30;42:ow=30;43
  PYENV_ROOT=/Users/malpern/.pyenv
  PYENV_SHELL=zsh
  DISABLE_AUTO_UPDATE=true
  TERM_PROGRAM=vscode
  TERM_PROGRAM_VERSION=0.50.1
  LANG=en_US.UTF-8
  COLORTERM=truecolor
  GIT_ASKPASS=/Applications/Cursor.../git/dist/askpass.sh
  VSCODE_GIT_ASKPASS_NODE=/Applications/Cursor...rsor Helper (Plugin)
  VSCODE_GIT_ASKPASS_EXTRA_ARGS=
  VSCODE_GIT_ASKPASS_MAIN=/Applications/Cursor...dist/askpass-main.js
  VSCODE_GIT_IPC_HANDLE=/var/folders/0s/42v7...-git-14a5ce3e7f.sock
  PYENV_VERSION=3.10.16
  PYENV_DIR=/
  VIRTUAL_ENV=/Volumes/Flash Gordo...e/nicktokatana/.venv
  PYENV_HOOK_PATH=/Users/malpern/.pyen.../usr/lib/pyenv/hooks
  VIRTUAL_ENV_PROMPT=.venv
  VSCODE_INJECTION=1
  ZDOTDIR=/Users/malpern
  USER_ZDOTDIR=/Users/malpern
  TERM=xterm-256color
  PS1=.venv%(?:%{[01;32m%...} $(git_prompt_info)
  PYTHONPATH=.
  _=/Users/malpern/.pyen...s/3.10.16/bin/pytest
  PYTEST_VERSION=8.3.4
  PYTEST_CURRENT_TEST=tests/dts/test_prepr...simple_keymap (call)
[DtsPreprocessor] Temp file: /var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpjxonai70.dts
[DtsPreprocessor] Temp file contents:
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <2>;
        columns = <3>;
        map = <
            RC(0,0) RC(0,1) RC(0,2)
            RC(1,0) RC(1,1) RC(1,2)
        >;
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &kp A &kp B &kp C
                &kp D &kp E &kp F
            >;
        };
    };
}; 
[DtsPreprocessor] cpp command: ['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', '-I', '/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include', '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpjxonai70.dts']
______________________________ test_preprocessor _______________________________

    def test_preprocessor():
        # Get the absolute path to the test fixtures directory
        fixtures_dir = os.path.join(os.path.dirname(__file__), "fixtures", "dts")
        include_path = os.path.join(fixtures_dir, "include")
    
        # Create preprocessor with include path
        preprocessor = DtsPreprocessor(include_paths=[include_path])
    
        # Preprocess the test file
        input_file = os.path.join(fixtures_dir, "simple_keymap.zmk")
        result = preprocessor.preprocess(input_file)
    
        # Check that the result contains the expected content
>       assert "RC(0,0)" in result
E       assert 'RC(0,0)' in '# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp6h9wpzkm.dts"\n# 1 "<built-in>" 1\n# 1 "<built-in>" 3\n\n\n\n\n\n\n# 1 "<command line>" 1\n# 1 "<built-in>" 2\n# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp6h9wpzkm.dts" 2\n# 1 "/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include/dt-bindings/zmk/keys.h" 1\n# 2 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp6h9wpzkm.dts" 2\n# 1 "/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include/dt-bindings/zmk/matrix_transform.h" 1\n# 3 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp6h9wpzkm.dts" 2\n\n/ {\n    chosen {\n        zmk,matrix_transform = &default_transform;\n    };\n\n    default_transform: matrix_transform {\n        compatible = "zmk,matrix-transform";\n        rows = <2>;\n        columns = <3>;\n        map = <\n            ((0) << 8 | (0)) ((0) << 8 | (1)) ((0) << 8 | (2))\n            ((1) << 8 | (0)) ((1) << 8 | (1)) ((1) << 8 | (2))\n        >;\n    };\n\n    keymap {\n        compatible = "zmk,keymap";\n\n        default_layer {\n            bindings = <\n                &kp 0x04 &kp 0x05 &kp 0x06\n                &kp 0x07 &kp 0x08 &kp 0x09\n            >;\n        };\n    };\n};\n'

tests/test_dts_preprocessor.py:21: AssertionError
----------------------------- Captured stdout call -----------------------------
[DtsPreprocessor] ENVIRONMENT:
  MallocNanoZone=0
  USER=malpern
  SECURITYSESSIONID=186a3
  COMMAND_MODE=unix2003
  __CFBundleIdentifier=com.todesktop.230313mzl4w4u92
  PATH=/Users/malpern/.curs....cache/lm-studio/bin
  LOGNAME=malpern
  SSH_AUTH_SOCK=/private/tmp/com.app...x1qskoux7b/Listeners
  HOME=/Users/malpern
  SHELL=/bin/zsh
  TMPDIR=/var/folders/0s/42v7...1cdnx0vrvyr0000gn/T/
  LaunchInstanceID=BFD4BF06-15BD-4F76-8D8A-1AEC50E6795A
  __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0
  XPC_SERVICE_NAME=0
  XPC_FLAGS=0x0
  ORIGINAL_XDG_CURRENT_DESKTOP=undefined
  CURSOR_TRACE_ID=f5e099fd466543c5a0d391e03a641e89
  SHLVL=1
  PWD=/Volumes/FlashGordon...ox/code/nicktokatana
  OLDPWD=/Volumes/FlashGordon...ox/code/nicktokatana
  HOMEBREW_PREFIX=/opt/homebrew
  HOMEBREW_CELLAR=/opt/homebrew/Cellar
  HOMEBREW_REPOSITORY=/opt/homebrew
  INFOPATH=/opt/homebrew/share/...homebrew/share/info:
  YOUR_CONSUMER_KEY=ah6HAffNJRCv4xNrV4OZcVIrQ
  YOUR_CONSUMER_SECRET=EXM9IzH9IEdE2yJf0t5F...DPuFXLk55DwB8pLRswR5
  YOUR_ACCESS_TOKEN=1483-5UbadNrxZUkJpAp...JSXPVSxtsPwJyrUrZvcO
  YOUR_ACCESS_TOKEN_SECRET=jeyyEWPHAgoS0ebKus4t...0jH2T3gRCIz3dsYXQwqS
  YOUR_BEARER_TOKEN=AAAAAAAAAAAAAAAAAAAA...8YVAWCOQu6Pyu4yhuY0a
  OPENAI_API_KEY=sk-qVQDNdwpfPhrAvFr9...ob362AQbhWVa3p95yD28
  ANTHROPIC_API_KEY=sk-ant-api03-Tq7nYRm...SCuUoAfwIQg-NWFWuAAA
  TAVILY_API_KEY=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
  BING_SUBSCRIPTION_KEY=bec8ded0f34a421ba60cc3bd4626825e
  EDITOR=vi
  ZSH=/Users/malpern/.oh-my-zsh
  PAGER=head -n 10000 | cat
  LESS=-R
  LSCOLORS=Gxfxcxdxbxegedabagacad
  LS_COLORS=di=1;36:ln=35:so=32:...46:tw=30;42:ow=30;43
  PYENV_ROOT=/Users/malpern/.pyenv
  PYENV_SHELL=zsh
  DISABLE_AUTO_UPDATE=true
  TERM_PROGRAM=vscode
  TERM_PROGRAM_VERSION=0.50.1
  LANG=en_US.UTF-8
  COLORTERM=truecolor
  GIT_ASKPASS=/Applications/Cursor.../git/dist/askpass.sh
  VSCODE_GIT_ASKPASS_NODE=/Applications/Cursor...rsor Helper (Plugin)
  VSCODE_GIT_ASKPASS_EXTRA_ARGS=
  VSCODE_GIT_ASKPASS_MAIN=/Applications/Cursor...dist/askpass-main.js
  VSCODE_GIT_IPC_HANDLE=/var/folders/0s/42v7...-git-14a5ce3e7f.sock
  PYENV_VERSION=3.10.16
  PYENV_DIR=/
  VIRTUAL_ENV=/Volumes/Flash Gordo...e/nicktokatana/.venv
  PYENV_HOOK_PATH=/Users/malpern/.pyen.../usr/lib/pyenv/hooks
  VIRTUAL_ENV_PROMPT=.venv
  VSCODE_INJECTION=1
  ZDOTDIR=/Users/malpern
  USER_ZDOTDIR=/Users/malpern
  TERM=xterm-256color
  PS1=.venv%(?:%{[01;32m%...} $(git_prompt_info)
  PYTHONPATH=.
  _=/Users/malpern/.pyen...s/3.10.16/bin/pytest
  PYTEST_VERSION=8.3.4
  PYTEST_CURRENT_TEST=tests/test_dts_prepr..._preprocessor (call)
[DtsPreprocessor] Temp file: /var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp6h9wpzkm.dts
[DtsPreprocessor] Temp file contents:
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <2>;
        columns = <3>;
        map = <
            RC(0,0) RC(0,1) RC(0,2)
            RC(1,0) RC(1,1) RC(1,2)
        >;
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &kp A &kp B &kp C
                &kp D &kp E &kp F
            >;
        };
    };
}; 
[DtsPreprocessor] cpp command: ['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', '-I', '/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include', '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmp6h9wpzkm.dts']
________________________ test_preprocessor_large_matrix ________________________

    def test_preprocessor_large_matrix():
        # Get the absolute path to the test fixtures directory
        fixtures_dir = os.path.join(os.path.dirname(__file__), "fixtures", "dts")
        include_path = os.path.join(fixtures_dir, "include")
    
        # Create preprocessor with include path
        preprocessor = DtsPreprocessor(include_paths=[include_path])
    
        # Preprocess the test file
        input_file = os.path.join(fixtures_dir, "large_keymap.zmk")
        result = preprocessor.preprocess(input_file)
    
        # Check that the result contains the expected content
        for row in range(4):
            for col in range(5):
>               assert f"RC({row},{col})" in result
E               assert 'RC(0,0)' in '# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpait7thvm.dts"\n# 1 "<built-in>" 1\n# 1 "<built-in>" 3\n\n\n\n\n\n\n# 1 "<command line>" 1\n# 1 "<built-in>" 2\n# 1 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpait7thvm.dts" 2\n# 1 "/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include/dt-bindings/zmk/keys.h" 1\n# 2 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpait7thvm.dts" 2\n# 1 "/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include/dt-bindings/zmk/matrix_transform.h" 1\n# 3 "/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpait7thvm.dts" 2\n\n/ {\n    chosen {\n        zmk,matrix_transform = &default_transform;\n    };\n\n    default_transform: matrix_transform {\n        compatible = "zmk,matrix-transform";\n        rows = <4>;\n        columns = <5>;\n        map = <\n            ((0) << 8 | (0)) ((0) << 8 | (1)) ((0) << 8 | (2)) ((0) << 8 | (3)) ((0) << 8 | (4))\n            ((1) << 8 | (0)) ((1) << 8 | (1)) ((1) << 8 | (2)) ((1) << 8 | (3)) ((1) << 8 | (4))\n            ((2) << 8 | (0)) ((2) << 8 | (1)) ((2) << 8 | (2)) ((2) << 8 | (3)) ((2) << 8 | (4))\n            ((3) << 8 | (0)) ((3) << 8 | (1)) ((3) << 8 | (2)) ((3) << 8 | (3)) ((3) << 8 | (4))\n        >;\n    };\n\n    keymap {\n        compatible = "zmk,keymap";\n\n        default_layer {\n            bindings = <\n                &kp 0x04 &kp 0x05 &kp 0x06 &kp 0x07 &kp 0x08\n                &kp 0x09 &kp G &kp H &kp I &kp J\n                &kp K &kp L &kp M &kp N &kp O\n                &kp P &kp Q &kp R &kp S &kp T\n            >;\n        };\n    };\n};\n'

tests/test_dts_preprocessor.py:50: AssertionError
----------------------------- Captured stdout call -----------------------------
[DtsPreprocessor] ENVIRONMENT:
  MallocNanoZone=0
  USER=malpern
  SECURITYSESSIONID=186a3
  COMMAND_MODE=unix2003
  __CFBundleIdentifier=com.todesktop.230313mzl4w4u92
  PATH=/Users/malpern/.curs....cache/lm-studio/bin
  LOGNAME=malpern
  SSH_AUTH_SOCK=/private/tmp/com.app...x1qskoux7b/Listeners
  HOME=/Users/malpern
  SHELL=/bin/zsh
  TMPDIR=/var/folders/0s/42v7...1cdnx0vrvyr0000gn/T/
  LaunchInstanceID=BFD4BF06-15BD-4F76-8D8A-1AEC50E6795A
  __CF_USER_TEXT_ENCODING=0x1F5:0x0:0x0
  XPC_SERVICE_NAME=0
  XPC_FLAGS=0x0
  ORIGINAL_XDG_CURRENT_DESKTOP=undefined
  CURSOR_TRACE_ID=f5e099fd466543c5a0d391e03a641e89
  SHLVL=1
  PWD=/Volumes/FlashGordon...ox/code/nicktokatana
  OLDPWD=/Volumes/FlashGordon...ox/code/nicktokatana
  HOMEBREW_PREFIX=/opt/homebrew
  HOMEBREW_CELLAR=/opt/homebrew/Cellar
  HOMEBREW_REPOSITORY=/opt/homebrew
  INFOPATH=/opt/homebrew/share/...homebrew/share/info:
  YOUR_CONSUMER_KEY=ah6HAffNJRCv4xNrV4OZcVIrQ
  YOUR_CONSUMER_SECRET=EXM9IzH9IEdE2yJf0t5F...DPuFXLk55DwB8pLRswR5
  YOUR_ACCESS_TOKEN=1483-5UbadNrxZUkJpAp...JSXPVSxtsPwJyrUrZvcO
  YOUR_ACCESS_TOKEN_SECRET=jeyyEWPHAgoS0ebKus4t...0jH2T3gRCIz3dsYXQwqS
  YOUR_BEARER_TOKEN=AAAAAAAAAAAAAAAAAAAA...8YVAWCOQu6Pyu4yhuY0a
  OPENAI_API_KEY=sk-qVQDNdwpfPhrAvFr9...ob362AQbhWVa3p95yD28
  ANTHROPIC_API_KEY=sk-ant-api03-Tq7nYRm...SCuUoAfwIQg-NWFWuAAA
  TAVILY_API_KEY=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
  BING_SUBSCRIPTION_KEY=bec8ded0f34a421ba60cc3bd4626825e
  EDITOR=vi
  ZSH=/Users/malpern/.oh-my-zsh
  PAGER=head -n 10000 | cat
  LESS=-R
  LSCOLORS=Gxfxcxdxbxegedabagacad
  LS_COLORS=di=1;36:ln=35:so=32:...46:tw=30;42:ow=30;43
  PYENV_ROOT=/Users/malpern/.pyenv
  PYENV_SHELL=zsh
  DISABLE_AUTO_UPDATE=true
  TERM_PROGRAM=vscode
  TERM_PROGRAM_VERSION=0.50.1
  LANG=en_US.UTF-8
  COLORTERM=truecolor
  GIT_ASKPASS=/Applications/Cursor.../git/dist/askpass.sh
  VSCODE_GIT_ASKPASS_NODE=/Applications/Cursor...rsor Helper (Plugin)
  VSCODE_GIT_ASKPASS_EXTRA_ARGS=
  VSCODE_GIT_ASKPASS_MAIN=/Applications/Cursor...dist/askpass-main.js
  VSCODE_GIT_IPC_HANDLE=/var/folders/0s/42v7...-git-14a5ce3e7f.sock
  PYENV_VERSION=3.10.16
  PYENV_DIR=/
  VIRTUAL_ENV=/Volumes/Flash Gordo...e/nicktokatana/.venv
  PYENV_HOOK_PATH=/Users/malpern/.pyen.../usr/lib/pyenv/hooks
  VIRTUAL_ENV_PROMPT=.venv
  VSCODE_INJECTION=1
  ZDOTDIR=/Users/malpern
  USER_ZDOTDIR=/Users/malpern
  TERM=xterm-256color
  PS1=.venv%(?:%{[01;32m%...} $(git_prompt_info)
  PYTHONPATH=.
  _=/Users/malpern/.pyen...s/3.10.16/bin/pytest
  PYTEST_VERSION=8.3.4
  PYTEST_CURRENT_TEST=tests/test_dts_prepr..._large_matrix (call)
[DtsPreprocessor] Temp file: /var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpait7thvm.dts
[DtsPreprocessor] Temp file contents:
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/matrix_transform.h>

/ {
    chosen {
        zmk,matrix_transform = &default_transform;
    };

    default_transform: matrix_transform {
        compatible = "zmk,matrix-transform";
        rows = <4>;
        columns = <5>;
        map = <
            RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)
            RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)
            RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)
            RC(3,0) RC(3,1) RC(3,2) RC(3,3) RC(3,4)
        >;
    };

    keymap {
        compatible = "zmk,keymap";
        
        default_layer {
            bindings = <
                &kp A &kp B &kp C &kp D &kp E
                &kp F &kp G &kp H &kp I &kp J
                &kp K &kp L &kp M &kp N &kp O
                &kp P &kp Q &kp R &kp S &kp T
            >;
        };
    };
}; 
[DtsPreprocessor] cpp command: ['/usr/bin/clang', '-E', '-nostdinc', '-undef', '-x', 'assembler-with-cpp', '-I', '/Volumes/FlashGordon/Dropbox/code/nicktokatana/tests/fixtures/dts/include', '/var/folders/0s/42v7yl697hn0l1cdnx0vrvyr0000gn/T/tmpait7thvm.dts']
_______________________ test_preprocessor_error_handling _______________________

    def test_preprocessor_error_handling():
        # Test with non-existent file
>       preprocessor = DtsPreprocessor(include_paths=["/nonexistent/path"])

tests/test_dts_preprocessor.py:60: 
_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ 

self = <converter.dts.preprocessor.DtsPreprocessor object at 0x102461810>
cpp_path = '/usr/bin/cpp', include_paths = ['/nonexistent/path']

    def __init__(
        self,
        cpp_path: Optional[str] = None,
        include_paths: Optional[List[str]] = None,
    ):
        """Initialize the preprocessor.
    
        Args:
            cpp_path: Path to the C preprocessor executable
            include_paths: List of paths to search for include files
        """
        if cpp_path is None:
            cpp_path = "/usr/bin/cpp"
        cpp_path = str(cpp_path)
        if not cpp_path.endswith("cpp"):
            raise PreprocessorError(
                "Invalid cpp path",
                help_text="The cpp path must point to a cpp executable",
            )
        self.cpp_path = Path(cpp_path)
    
        self.include_paths = []
        if include_paths:
            for path in include_paths:
                path_obj = Path(path)
                if not path_obj.exists():
                    msg = f"Include path does not exist: {path}"
                    help_text = "Ensure all include paths exist and are " "accessible"
>                   raise PreprocessorError(msg, help_text=help_text)
E                   converter.dts.preprocessor.PreprocessorError: Include path does not exist: /nonexistent/path

converter/dts/preprocessor.py:77: PreprocessorError
=========================== short test summary info ============================
FAILED tests/dts/test_performance.py::test_preprocessor_performance - convert...
FAILED tests/dts/test_preprocessor.py::test_preprocessor_initialization - Att...
FAILED tests/dts/test_preprocessor.py::test_preprocess_invalid_file - convert...
FAILED tests/dts/test_preprocessor.py::test_preprocess_invalid_cpp_command - ...
FAILED tests/dts/test_preprocessor.py::test_preprocess_simple_keymap - assert...
FAILED tests/test_dts_preprocessor.py::test_preprocessor - assert 'RC(0,0)' i...
FAILED tests/test_dts_preprocessor.py::test_preprocessor_large_matrix - asser...
FAILED tests/test_dts_preprocessor.py::test_preprocessor_error_handling - con...
================== 8 failed, 7 passed, 57 deselected in 0.24s ==================
