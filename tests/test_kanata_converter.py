import pytest
from converter.kanata_converter import KanataConverter


def test_convert_simple_keymap():
    """Test converting a simple keymap."""
    # Create test data
    dts_data = {
        "matrix_size": (2, 3),
        "matrix_map": [
            ["((0) << 8 | (0))", "((0) << 8 | (1))", "((0) << 8 | (2))"],
            ["((1) << 8 | (0))", "((1) << 8 | (1))", "((1) << 8 | (2))"],
        ],
        "keymap": {
            "default": [
                ["&kp A", "&kp B", "&kp C"],
                ["&kp D", "&kp E", "&kp F"],
            ],
        },
    }

    # Convert to Kanata
    converter = KanataConverter()
    result = converter.convert(dts_data)

    # Check the result
    expected = """# Generated by ZMK to Kanata converter
# Matrix size: 2x3

# Layer: default
a b c
d e f
"""
    assert result == expected


def test_convert_large_keymap():
    """Test converting a larger keymap."""
    # Create test data
    dts_data = {
        "matrix_size": (4, 5),
        "matrix_map": [
            [
                "((0) << 8 | (0))",
                "((0) << 8 | (1))",
                "((0) << 8 | (2))",
                "((0) << 8 | (3))",
                "((0) << 8 | (4))",
            ],
            [
                "((1) << 8 | (0))",
                "((1) << 8 | (1))",
                "((1) << 8 | (2))",
                "((1) << 8 | (3))",
                "((1) << 8 | (4))",
            ],
            [
                "((2) << 8 | (0))",
                "((2) << 8 | (1))",
                "((2) << 8 | (2))",
                "((2) << 8 | (3))",
                "((2) << 8 | (4))",
            ],
            [
                "((3) << 8 | (0))",
                "((3) << 8 | (1))",
                "((3) << 8 | (2))",
                "((3) << 8 | (3))",
                "((3) << 8 | (4))",
            ],
        ],
        "keymap": {
            "default": [
                ["&kp A", "&kp B", "&kp C", "&kp D", "&kp E"],
                ["&kp F", "&kp G", "&kp H", "&kp I", "&kp J"],
                ["&kp K", "&kp L", "&kp M", "&kp N", "&kp O"],
                ["&kp P", "&kp Q", "&kp R", "&kp S", "&kp T"],
            ],
        },
    }

    # Convert to Kanata
    converter = KanataConverter()
    result = converter.convert(dts_data)

    # Check the result
    expected = """# Generated by ZMK to Kanata converter
# Matrix size: 4x5

# Layer: default
a b c d e
f g h i j
k l m n o
p q r s t
"""
    assert result == expected


def test_convert_multiple_layers():
    """Test converting a keymap with multiple layers."""
    # Create test data
    dts_data = {
        "matrix_size": (2, 2),
        "matrix_map": [
            ["((0) << 8 | (0))", "((0) << 8 | (1))"],
            ["((1) << 8 | (0))", "((1) << 8 | (1))"],
        ],
        "keymap": {
            "default": [
                ["&kp A", "&kp B"],
                ["&kp C", "&kp D"],
            ],
            "lower": [
                ["&kp E", "&kp F"],
                ["&kp G", "&kp H"],
            ],
            "raise": [
                ["&kp I", "&kp J"],
                ["&kp K", "&kp L"],
            ],
        },
    }

    # Convert to Kanata
    converter = KanataConverter()
    result = converter.convert(dts_data)

    # Check the result
    expected = """# Generated by ZMK to Kanata converter
# Matrix size: 2x2

# Layer: default
a b
c d

# Layer: lower
e f
g h

# Layer: raise
i j
k l
"""
    assert result == expected


def test_convert_invalid_key_code():
    """Test converting with an invalid key code."""
    # Create test data with an invalid key code
    dts_data = {
        "matrix_size": (1, 1),
        "matrix_map": [["((0) << 8 | (0))"]],
        "keymap": {
            "default": [["&kp INVALID"]],
        },
    }

    # Convert to Kanata
    converter = KanataConverter()
    with pytest.raises(ValueError):
        converter.convert(dts_data)


def test_convert_invalid_key_type():
    """Test converting with an invalid key type."""
    # Create test data with an invalid key type
    dts_data = {
        "matrix_size": (1, 1),
        "matrix_map": [["((0) << 8 | (0))"]],
        "keymap": {
            "default": [["&invalid A"]],
        },
    }

    # Convert to Kanata
    converter = KanataConverter()
    with pytest.raises(ValueError):
        converter.convert(dts_data)
